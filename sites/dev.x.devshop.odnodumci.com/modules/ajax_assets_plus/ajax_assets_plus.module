<?php

/**
 * @file
 * The module file.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_js_settings_build().
 *
 * Collects all the loaded libraries with dependencies in js settings.
 *
 * @see \Drupal\ajax_assets_plus\AjaxAssetsPlusRenderer::render()
 * @see \Drupal\ajax_assets_plus\AjaxAssetsPlusAjaxResponseAttachmentsProcessor::groupAssetsByLibraries()
 */
function ajax_assets_plus_js_settings_build(&$settings, AttachedAssetsInterface $assets) {
  // Collects all the loaded libraries with dependencies in js settings.
  // We need this setting to detect new libraries delivered to frontend.
  // We should to send libraries settings to the frontend library if:
  // - frontend library is loaded, as all the frontend logic is happening there.
  // - core/drupal.ajax already has been loaded, as we need to handle AJAX
  //   commands.
  /** @var \Drupal\Core\Asset\LibraryDependencyResolver $library_dependency_resolver */
  $library_dependency_resolver = \Drupal::service('library.dependency_resolver');
  $libraries = $library_dependency_resolver->getLibrariesWithDependencies($assets->getLibraries());
  if (!in_array('ajax_assets_plus/drupal.ajax', $libraries)) {
    return;
  }
  $settings['ajaxAssetsPlus']['libraries'] = $libraries;
}

/**
 * Implements hook_views_pre_render().
 *
 * Replaces views ajax with ajax_assets_plus integration.
 */
function ajax_assets_plus_views_pre_render($view) {
  /** @var \Drupal\views\ViewExecutable $view */
  if ($view->ajaxEnabled() && !empty($view->getDisplay()->display['display_options']['use_ajax_assets_plus'])) {
    $view->element['#attached']['drupalSettings']['views']['ajax_path'] = \Drupal::url('ajax_assets_plus.views.ajax');
    $view->element['#attached']['drupalSettings']['ajaxAssetsPlus']['views'] = $view->element['#attached']['drupalSettings']['views'];
    unset($view->element['#attached']['drupalSettings']['views']);

    $key = array_search('views/views.ajax', $view->element['#attached']['library']);
    $view->element['#attached']['library'][$key] = 'ajax_assets_plus/views.ajax';
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function ajax_assets_plus_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'views_pre_render') {
    // Move ajax_assets_plus_views_pre_render() to the end of the list.
    $group = $implementations['ajax_assets_plus'];
    unset($implementations['ajax_assets_plus']);
    $implementations['ajax_assets_plus'] = $group;
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Adds configuration setting for ajax assets plus usage.
 */
function ajax_assets_plus_form_views_ui_edit_display_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!empty($form['options']['use_ajax'])) {
    /** @var \Drupal\views\Entity\View $view */
    $view = $form_state->getStorage()['view'];
    $display = $view->getExecutable()->getDisplay();
    $form['options']['use_ajax_assets_plus'] = [
      '#type' => 'checkbox',
      '#title' => t('Use ajax assets plus'),
      '#description' => t('Enables cacheable ajax requests.'),
      '#default_value' => !empty($display->display['display_options']['use_ajax_assets_plus']),
      '#states' => [
        'visible' => [
          ':input[name="use_ajax"]' => ['checked' => TRUE],
        ],
      ],
    ];

    array_unshift($form['actions']['submit']['#submit'], '_ajax_assets_plus_form_views_ui_edit_display_submit');
  }
}

/**
 * Implements form submit callback for views_ui_edit_display form.
 *
 * Saves configuration setting for ajax assets plus usage.
 */
function _ajax_assets_plus_form_views_ui_edit_display_submit(&$form, FormStateInterface $form_state) {
  // Unset use_ajax_assets_plus value if use_ajax is unset.
  if ($form_state->getValue('use_ajax_assets_plus') && !$form_state->getValue('use_ajax')) {
    $form_state->setValue('use_ajax_assets_plus', FALSE);
  }

  /** @var \Drupal\views\Entity\View $view */
  $view = $form_state->getStorage()['view'];
  $display = $view->getExecutable()->getDisplay();
  $display->display['display_options']['use_ajax_assets_plus'] = $form_state->getValue('use_ajax_assets_plus');
}
